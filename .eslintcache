[{"E:\\ReactJS\\demo-webcam\\src\\App.tsx":"1","E:\\ReactJS\\demo-webcam\\src\\index.tsx":"2","E:\\ReactJS\\demo-webcam\\src\\reportWebVitals.ts":"3","E:\\ReactJS\\demo-webcam\\src\\features\\login\\LoginScreen.tsx":"4","E:\\ReactJS\\demo-webcam\\src\\helper\\base.ts":"5","E:\\ReactJS\\demo-webcam\\src\\features\\uploadIdentityCard\\Upload-Identity-Card-Screen.tsx":"6","E:\\ReactJS\\demo-webcam\\src\\features\\webcam\\webcam.tsx":"7","E:\\ReactJS\\demo-webcam\\src\\features\\uploadIdentityCard\\components\\inputfile-custom.tsx":"8","E:\\ReactJS\\demo-webcam\\src\\features\\finish\\finish-screen.tsx":"9","E:\\ReactJS\\demo-webcam\\src\\features\\finish\\components\\card-info-item.tsx":"10"},{"size":881,"mtime":1609831128158,"results":"11","hashOfConfig":"12"},{"size":593,"mtime":1609748403857,"results":"13","hashOfConfig":"12"},{"size":425,"mtime":1609389840446,"results":"14","hashOfConfig":"12"},{"size":3027,"mtime":1610335782332,"results":"15","hashOfConfig":"12"},{"size":1498,"mtime":1609812807320,"results":"16","hashOfConfig":"12"},{"size":7723,"mtime":1610417420746,"results":"17","hashOfConfig":"12"},{"size":6491,"mtime":1610363385908,"results":"18","hashOfConfig":"12"},{"size":1168,"mtime":1609833022220,"results":"19","hashOfConfig":"12"},{"size":8133,"mtime":1610417296213,"results":"20","hashOfConfig":"12"},{"size":854,"mtime":1609834384287,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1lig6h2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"E:\\ReactJS\\demo-webcam\\src\\App.tsx",[],["48","49"],"E:\\ReactJS\\demo-webcam\\src\\index.tsx",[],"E:\\ReactJS\\demo-webcam\\src\\reportWebVitals.ts",[],"E:\\ReactJS\\demo-webcam\\src\\features\\login\\LoginScreen.tsx",["50","51","52"],"import * as React from \"react\";\r\nimport \"./LoginScreen.css\";\r\nimport axios from \"axios\";\r\nimport { URL_GET_TOKEN, publicKey } from \"../../helper/base\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoginScreen = () => {\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [passWord, setPassWord] = React.useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  // logo\r\n  const HyperLogo = require(\"../../assets/hyper-logo.png\").default;\r\n\r\n  // ----------------- login --------------------------\r\n\r\n  const onLogin = () => {\r\n    console.log(\"GET TOKEN: \", userName + \"---\" + passWord);\r\n    if (validate(userName, passWord)) {\r\n      getToken();\r\n    }\r\n  };\r\n  // ---------------- validate form -----------------------\r\n\r\n  const validate = (userName: string, password: string) => {\r\n    if (userName.length == 0 || password.length == 0) {\r\n      alert(\"Vui lòng nhập đầy đủ thông tin\");\r\n      return false;\r\n    } else {\r\n      console.log(\"Login Success ........\");\r\n      return true;\r\n    }\r\n  };\r\n\r\n  // ---------------- get token -------------------------\r\n  const getToken = async () => {\r\n    console.log(\"test_get_token: \", URL_GET_TOKEN);\r\n\r\n    // Platform.OS === 'android' &&  ToastAndroid.show(\"get_api: \"+ URL_GET_TOKEN, ToastAndroid.SHORT);\r\n\r\n    await axios\r\n      .get(URL_GET_TOKEN, {\r\n        params: {\r\n          publicKey: publicKey,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // Platform.OS === 'android' &&  ToastAndroid.show(\"get_api_success: \"+ response, ToastAndroid.SHORT);\r\n\r\n        console.log(\"test_login_rs_0: \", response);\r\n        const rs = response?.data;\r\n        if (rs?.Code === 200) {\r\n          const token = rs?.Token;\r\n          console.log(\"Token_LoginScreen: \", token);\r\n          localStorage.setItem(\"Token\", token);\r\n          history.push(\"/upload-identity-card\");\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // Platform.OS === 'android' &&  ToastAndroid.show(\"get_api_fail: \"+ error, ToastAndroid.SHORT);\r\n        console.log(\"VerifyLogin: \" + error);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"login_container\">\r\n      <img src={HyperLogo} className=\"login_logo\" />\r\n      <div className=\"login_form\">\r\n        <span className=\"login_title\">Nhập Thông Tin</span>\r\n        <span className=\"imput_field_label\">Tên đăng nhập</span>\r\n        <input\r\n          className=\"input_field\"\r\n          placeholder=\"vui lòng nhập tên đăng nhập\"\r\n          onChange={(event) => setUserName(event.target.value)}\r\n        ></input>\r\n        <span className=\"imput_field_label\">Mật Khẩu</span>\r\n        <input\r\n          className=\"input_field\"\r\n          placeholder=\"vui lòng nhập mật khẩu\"\r\n          onChange={(event) => setPassWord(event.target.value)}\r\n          type=\"password\"\r\n        ></input>\r\n        <button className=\"login_btn\" onClick={onLogin}>\r\n          Đăng nhập\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","E:\\ReactJS\\demo-webcam\\src\\helper\\base.ts",[],"E:\\ReactJS\\demo-webcam\\src\\features\\uploadIdentityCard\\Upload-Identity-Card-Screen.tsx",["53","54","55","56","57","58","59","60","61","62","63","64"],"import axios from \"axios\";\r\nimport * as React from \"react\";\r\nimport { URL_OCR } from \"../../helper/base\";\r\nimport InputFileCustom from \"./components/inputfile-custom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Upload-Identity_Card_Screen.css\";\r\nimport { userInfo } from \"os\";\r\n\r\nconst UploadIdentityCardScreen = () => {\r\n  const [IdentityCard, setIdentityCard] = React.useState([]);\r\n  const [frontFile, setFrontFile] = React.useState(null);\r\n  const [backFile, setBackFile] = React.useState(null);\r\n  const [type, setType] = React.useState(0);\r\n  const [loadingOcr, setLoadingOcr] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n  // -------------- load image -------------------------------\r\n  //@ts-ignore\r\n  const loadFile = (e, type: number) => {\r\n    if (type == 0) {\r\n      var front_image = document.getElementById(\"front-image\");\r\n      //@ts-ignore\r\n      front_image.src = URL.createObjectURL(e.target.files[0]);\r\n    } else {\r\n      var back_image = document.getElementById(\"back-image\");\r\n      //@ts-ignore\r\n      back_image.src = URL.createObjectURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // ------------------- ocr -----------------------------------\r\n\r\n  const ocr = async () => {\r\n    if (frontFile == null || backFile == null) {\r\n      alert(\"Hãy nhập đủ thông tin ảnh\");\r\n    } else {\r\n      setLoadingOcr(true);\r\n      const token = localStorage.getItem(\"Token\");\r\n\r\n      var formData = new FormData();\r\n\r\n      formData.append(\r\n        \"IdCardFront\",\r\n        //@ts-ignore\r\n        frontFile,\r\n        `FrontIdCard_${new Date().getTime()}.jpg`\r\n      );\r\n\r\n      formData.append(\r\n        \"IdCardBack\",\r\n        //@ts-ignore\r\n        backFile,\r\n        `BackIdCard_${new Date().getTime()}.jpg`\r\n      );\r\n\r\n      const config = {\r\n        headers: {\r\n          // \"Content-Type\": \"application/json\",\r\n          \"content-type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${token || \"\"}`,\r\n        },\r\n      };\r\n\r\n      console.log(\"FORM DATA : \", formData);\r\n\r\n      await axios\r\n        .post(URL_OCR, formData, config)\r\n        .then((response) => {\r\n          // Platform.OS === 'android' && ToastAndroid.show(\"get_ocr_success: \", ToastAndroid.SHORT);\r\n          const code = response?.data?.code;\r\n          const data = response?.data?.data;\r\n          const card = data?.idCard;\r\n          const urlXml = data?.urlXml;\r\n\r\n          // if (CURRENT_APP === TYPE_APPS.VIETTEL_EXIMBANK) {\r\n          //   const cif = data?.cif;\r\n          //   if (cif !== '' && cif !== null) {\r\n          //     Alert.alert('Mã CIF đã tồn tại: ', cif);\r\n          //   }\r\n          // }\r\n\r\n          console.log(\"RESPONSE: \", response);\r\n          console.log(\r\n            \"test_extractInformation_3: \",\r\n            response?.data?.data,\r\n            \"__\",\r\n            data.guidID,\r\n            \"__xml: \",\r\n            urlXml\r\n          );\r\n          if (\r\n            (card?.msgDataFront != \"\" && card?.msgDataFront != null) ||\r\n            (card?.msgDataBack != \"\" && card?.msgDataBack != null)\r\n          ) {\r\n            setLoadingOcr(false);\r\n            // this.setState({\r\n            //   extractBtnStatus: false,\r\n            //   isDoneOCR: true,\r\n            //   matchedSuccess: code === 400 ? false : true,\r\n            //   msgOCR:\r\n            //     (card?.msgDataFront != '' && card?.msgDataFront != null\r\n            //       ? card?.msgDataFront\r\n            //       : '') +\r\n            //     (card?.msgDataBack != '' && card?.msgDataBack != null\r\n            //       ? card?.msgDataBack\r\n            //       : ''),\r\n            // });\r\n          } else {\r\n            // globalConfiguration.AppUserName = response.data.idCard.identCardName;\r\n            const UserInfo = {\r\n              cardType: card?.identCardType || \"\",\r\n              id: card?.identCardNumber || \"\",\r\n              fullName: card?.identCardName || \"\",\r\n              dateOfBirth: card?.identCardBirthDate || \"\",\r\n              guiId: data.guidID,\r\n              gender: card?.identCardGender,\r\n              nation_ethnic: card?.identCardNation || \"\",\r\n              hometown: card?.identCardCountry || \"\",\r\n              addressResidence: card?.identCardAdrResidence || \"\",\r\n              expireDate: card?.identCardExpireDate || \"\",\r\n              identCardIssueDate: card?.identCardIssueDate || \"\",\r\n              // base64Image: data.resultStatus?.returnObj || '',\r\n            };\r\n\r\n            console.log(\"====================================\");\r\n            console.log(\"USER INFO :\", UserInfo);\r\n            console.log(\"====================================\");\r\n\r\n            localStorage.setItem(\"UserInfo_guiId\", UserInfo.guiId);\r\n\r\n            setLoadingOcr(false);\r\n            // console.log('test_base_64: ', data.resultStatus?.returnObj)\r\n\r\n            // this.setState({\r\n            //   fetchData: true,\r\n            //   extractBtnStatus: false,\r\n            //   isFrontDisplayCollapsed: true,\r\n            //   isBackDisplayCollapsed: true,\r\n            //   isDoneOCR: true,\r\n            //   matchedSuccess: code === 400 ? false : true,\r\n            //   msgOCR: 'OCR thành công.',\r\n            // });\r\n\r\n            history.push(\"/capture-video\", {\r\n              userinfo: UserInfo,\r\n              frontFile: frontFile,\r\n              backFile: backFile,\r\n              guiId:UserInfo.guiId\r\n            });\r\n          }\r\n          // })\r\n        })\r\n        .catch((error) => {\r\n          // Platform.OS === 'android' && ToastAndroid.show(\"get_ocr_fail: \" + error, ToastAndroid.SHORT);\r\n          console.log(\"test_extractInformation_2: \", error);\r\n          // this.setState({\r\n          //   extractBtnStatus: false,\r\n          //   isDoneOCR: true,\r\n          //   matchedSuccess: code === 400 ? false : true,\r\n          //   msgOCR: 'OCR thất bại: ' + error,\r\n          // });\r\n          console.log(\"VerifyIdCardv2 ERROR: \" + error);\r\n        });\r\n    }\r\n  };\r\n\r\n  //@ts-ignore\r\n  const onChooseImage = (e, type: number) => {\r\n    console.log(\"====================================\");\r\n    console.log(\"TARGET fILE: \", e.target.files[0]);\r\n    console.log(\"====================================\");\r\n    if (type == 0) {\r\n      setBackFile(e.target.files[0]);\r\n    } else {\r\n      setFrontFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-image-container\">\r\n      <span className=\"upload-image-title\">Upload ảnh chụp giấy tờ</span>\r\n      <div className=\"upload-image-form-ctn\">\r\n        <div className=\"upload-image-form\">\r\n          <span className=\"upload-image-form_title\">Ảnh mặt trước</span>\r\n          <img\r\n            className=\"indentity-card-image\"\r\n            // src={this.state.IdentityCard[0]}\r\n            id=\"front-image\"\r\n            alt=\"image\"\r\n          />\r\n          <InputFileCustom\r\n            label=\"upload Image\"\r\n            type={0}\r\n            callback={onChooseImage}\r\n            loadImagae={loadFile}\r\n          />\r\n        </div>\r\n        <div className=\"upload-image-form\">\r\n          <span className=\"upload-image-form_title\">Ảnh mặt sau</span>\r\n          <img\r\n            className=\"indentity-card-image\"\r\n            // src={this.state.IdentityCard[1]}\r\n            id=\"back-image\"\r\n            alt=\"image\"\r\n          />\r\n          <InputFileCustom\r\n            label=\"upload Image\"\r\n            type={1}\r\n            callback={onChooseImage}\r\n            loadImagae={loadFile}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button className=\"select-button\" onClick={ocr}>\r\n        {loadingOcr? 'Vui lòng chờ...' : 'Tiếp tục'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadIdentityCardScreen;\r\n","E:\\ReactJS\\demo-webcam\\src\\features\\webcam\\webcam.tsx",["65","66","67","68","69","70","71","72"],"import * as React from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./webcam.css\";\r\nimport { URL_FACE_VIDEO } from \"../../helper/base\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { userInfo } from \"os\";\r\n\r\nconst WebCam = () => {\r\n  const [recording, setRecording] = React.useState(false);\r\n  const [recordedChunks, setRecordedChunks] = React.useState([]);\r\n  const [loadingVerifyFace, setLoadingVerifyFace] = React.useState(false);\r\n\r\n  const webcamRef = React.createRef<Webcam>();\r\n  const mediaRecorderRef = React.createRef<MediaRecorder>();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //@ts-ignore\r\n  const guiId = location.state.guiId;\r\n\r\n  // const handleClick = () => {\r\n  //   const screenshot = webcamRef.current?.getScreenshot();\r\n  //   console.log(\"SCREEN SHOT : \", screenshot);\r\n  // };\r\n\r\n  /// ------------- start record -----------------------------------\r\n  const onStartRecord = React.useCallback(() => {\r\n    setRecording(true);\r\n    // setRecordedChunks([]);\r\n    //@ts-ignore\r\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current?.stream, {\r\n      mimeType: \"video/webm;vp8\",\r\n    });\r\n    mediaRecorderRef.current?.addEventListener(\r\n      \"dataavailable\",\r\n      handleDataAvailable\r\n    );\r\n    mediaRecorderRef.current?.start();\r\n  }, [webcamRef, setRecording, mediaRecorderRef]);\r\n\r\n  /// ------------ handle data ---------------------------\r\n  const handleDataAvailable = React.useCallback(\r\n    ({ data }) => {\r\n      if (data.size > 0) {\r\n        console.log(\"data...\");\r\n        setRecordedChunks((prev) => prev.concat(data));\r\n      }\r\n    },\r\n    [setRecordedChunks]\r\n  );\r\n\r\n  /// --------- stop record -----------------------------\r\n  const onStopRecord = React.useCallback(() => {\r\n    //@ts-ignore\r\n    mediaRecorderRef.current.stop();\r\n    setRecording(false);\r\n  }, [mediaRecorderRef, webcamRef, setRecording]);\r\n\r\n  // ------------------ dowload ------------------------------\r\n\r\n  const handleDownload = React.useCallback(() => {\r\n    console.log(\"====================================\");\r\n    console.log(\"RECORDED CHUNKS :\", recordedChunks);\r\n    console.log(\"====================================\");\r\n    if (recordedChunks.length) {\r\n      const blob = new Blob(recordedChunks, {\r\n        type: \"video/mp4\",\r\n      });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      //@ts-ignore\r\n      a.style = \"display: none\";\r\n      a.href = url;\r\n      a.download = \"react-webcam-stream-capture.mp4\";\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      setRecordedChunks([]);\r\n    }\r\n  }, [recordedChunks]);\r\n\r\n  // --------------------- continue --------------------------\r\n\r\n  const handleContinue = React.useCallback(() => {\r\n    console.log(\"====================================\");\r\n    console.log(\"RECORDED CHUNKS :\", recordedChunks);\r\n    console.log(\"====================================\");\r\n\r\n    // if (recordedChunks.length) {\r\n    //   playVideo();\r\n    //   verifyFace();\r\n    // }\r\n    const file = new File(recordedChunks, \"video.mp4\", {\r\n      type: \"video/mp4\",\r\n    });\r\n    console.log(\"====================================\");\r\n    console.log(\"FILE :\", file);\r\n    //@ts-ignore\r\n    console.log(\"USER INFO :\", location.state.userinfo);\r\n\r\n    console.log(\"====================================\");\r\n\r\n    history.push(\"/finish\", {\r\n      file: file,\r\n      //@ts-ignore\r\n      userinfo: location.state.userinfo,\r\n      //@ts-ignore\r\n      frontFile: location.state.frontFile,\r\n      //@ts-ignore\r\n      backFile: location.state.backFile,\r\n      guiId:guiId\r\n    });\r\n  }, [recordedChunks]);\r\n\r\n  //\r\n  const renderButton = () => {\r\n    // if (recording) {\r\n    //   return (\r\n    //     <button className=\"camera_button\" onClick={onStopRecord}>\r\n    //       stop record\r\n    //     </button>\r\n    //   );\r\n    // } else {\r\n      return (\r\n        <button className=\"camera_button\" onClick={captureVideo}>\r\n          {recording? 'Đang chụp khuôn mặt ...' : 'Chụp khuôn mặt'}\r\n        </button>\r\n      );\r\n    // }\r\n  };\r\n\r\n  //\r\n\r\n  const renderDowloadBtn = () => {\r\n    if (recordedChunks.length > 0) {\r\n      return (\r\n        <button className=\"camera_button\" onClick={handleContinue}>\r\n          Tiếp tục\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  // ---------------------- Quay video --------------------------\r\n\r\n  const captureVideo = () => {\r\n    onStartRecord();\r\n    setTimeout(onStopRecord, 3500);\r\n    // handleDownload();\r\n  };\r\n\r\n  const playVideo = () => {\r\n    var video = document.getElementById(\"preview-video\");\r\n    const blob = new Blob(recordedChunks, {\r\n      type: \"video/mp4\",\r\n    });\r\n    const url = URL.createObjectURL(blob);\r\n    //@ts-ignore\r\n    video.src = url;\r\n    console.log(\"LINK_BLOB_VIDEO_PLAY: \", url);\r\n\r\n    //@ts-ignore\r\n    video.load();\r\n    //@ts-ignore\r\n    video.onloadeddata = function () {\r\n      //@ts-ignore\r\n      video.play();\r\n    };\r\n  };\r\n\r\n  const verifyFace = async () => {\r\n    setLoadingVerifyFace(true);\r\n    var formData = new FormData();\r\n    const token = localStorage.getItem(\"Token\");\r\n    const guiId = localStorage.getItem(\"UserInfo_ guiId\") || \"\";\r\n    const file = new File(recordedChunks, \"video.mp4\", {\r\n      type: \"video/mp4\",\r\n    });\r\n\r\n    formData.append(\r\n      \"CaptureVideo\",\r\n      file,\r\n      `CaptureVideo_${new Date().getTime()}.mp4`\r\n    );\r\n\r\n    formData.append(\"GuidID\", guiId);\r\n\r\n    const config = {\r\n      headers: {\r\n        // \"Content-Type\": \"application/json\",\r\n        \"content-type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${token || \"\"}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(URL_FACE_VIDEO, formData, config).then((response) => {\r\n      console.log(\"RESPONSE : \", response);\r\n      setLoadingVerifyFace(false);\r\n      // history.push('/finish')\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"webcam_ctn\">\r\n      <Webcam\r\n        height={720}\r\n        width={1024}\r\n        mirrored={true}\r\n        screenshotFormat=\"image/jpeg\"\r\n        ref={webcamRef}\r\n      />\r\n      <div>\r\n        {/* <button className=\"camera_button\" onClick={handleClick}>\r\n          Capture\r\n        </button> */}\r\n        {renderButton()}\r\n        {renderDowloadBtn()}\r\n      </div>\r\n\r\n      {/* <img src={screenshot} /> */}\r\n      <video id=\"preview-video\"></video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebCam;\r\n","E:\\ReactJS\\demo-webcam\\src\\features\\uploadIdentityCard\\components\\inputfile-custom.tsx",[],"E:\\ReactJS\\demo-webcam\\src\\features\\finish\\finish-screen.tsx",["73","74","75","76","77","78","79","80","81"],"import * as React from \"react\";\r\nimport CardInfoItem from \"./components/card-info-item\";\r\nimport \"./finish-screen.css\";\r\nimport { URL_FACE_VIDEO } from \"../../helper/base\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\ninterface info {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst FinishScreen = () => {\r\n  const [width, height] = useWindowSize();\r\n  const [col1, setCol1] = React.useState([]);\r\n  const [col2, setCol2] = React.useState([]);\r\n  const [loadingLiveNess, setLoadingLiveNess] = React.useState(true);\r\n  const [liveNessDone, setLineNessDone] = React.useState(false);\r\n  const [compare, setCompare] = React.useState(false);\r\n  const [faceImg, setFaceImg] = React.useState(\"\");\r\n  const location = useLocation();\r\n  const [frontFile, setFrontFile] = React.useState(null);\r\n  const [backFile, setBackFile] = React.useState(null);\r\n  const history = useHistory();\r\n\r\n  const token = localStorage.getItem(\"Token\");\r\n  const guiId = localStorage.getItem(\"UserInfo_guiId\") || \"\";\r\n  //@ts-ignore\r\n  // const guiId = location.state.guiId;\r\n\r\n  React.useEffect(() => {\r\n    getdata();\r\n\r\n    LiveNess();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    loadImg();\r\n  });\r\n\r\n  // --------------------- render Column user info ---------------------------------\r\n  const renderLeftCol = () => {\r\n    if (col1.length > 0) {\r\n      return (\r\n        <div className=\"column\">\r\n          {col1.map((item: { label: string; value: string }) => (\r\n            <CardInfoItem label={item.label} value={item.value} />\r\n          ))}\r\n          <img\r\n            className=\"image_card\"\r\n            id=\"finish-front-image\"\r\n            alt=\"front_image\"\r\n          />\r\n        </div>\r\n      );\r\n    } else return <div></div>;\r\n  };\r\n  const renderRightCol = () => {\r\n    if (col2.length > 0) {\r\n      return (\r\n        <div className=\"column\">\r\n          {col2.map((item: { label: string; value: string }) => (\r\n            <CardInfoItem label={item.label} value={item.value} />\r\n          ))}\r\n          <img className=\"image_card\" id=\"finish-back-image\" alt=\"back_image\" />\r\n        </div>\r\n      );\r\n    } else return <div></div>;\r\n  };\r\n\r\n  // ------------------- read data info --------------------------------\r\n  const getdata = () => {\r\n    // @ts-ignore\r\n    console.log(\"FINISH GET DATA:\", location.state.file);\r\n    //@ts-ignore\r\n    console.log(\"FINISH USER INFO: \", location.state.userinfo);\r\n    console.log(\"FINISH GUIID: \", guiId);\r\n    //@ts-ignore\r\n    const UserInfo = location.state.userinfo;\r\n    //@ts-ignore\r\n    console.log(\"File FrontImage: \", location.state.frontFile);\r\n    //@ts-ignore\r\n    console.log(\"File BackImage: \", location.state.backFile);\r\n\r\n    //@ts-ignore\r\n    setFrontFile(location.state.frontFile);\r\n    //@ts-ignore\r\n    setBackFile(location.state.backFile);\r\n\r\n    //@ts-ignore\r\n    col1.push({\r\n      //@ts-ignore\r\n      label: \"Loại thẻ\",\r\n      //@ts-ignore\r\n      value: UserInfo.cardType,\r\n    });\r\n    col1.push({\r\n      //@ts-ignore\r\n      label: \"Chứng minh nhân dân số\",\r\n      //@ts-ignore\r\n      value: UserInfo.id,\r\n    });\r\n    col1.push({\r\n      //@ts-ignore\r\n      label: \"Họ và tên\",\r\n      //@ts-ignore\r\n      value: UserInfo.fullName,\r\n    });\r\n    col1.push({\r\n      //@ts-ignore\r\n      label: \"Ngày, tháng, năm sinh\",\r\n      //@ts-ignore\r\n      value: UserInfo.dateOfBirth,\r\n    });\r\n    col1.push({\r\n      //@ts-ignore\r\n      label: \"Quê quán\",\r\n      //@ts-ignore\r\n      value: UserInfo.hometown,\r\n    });\r\n    col2.push({\r\n      //@ts-ignore\r\n      label: \"Địa chỉ thường trú\",\r\n      //@ts-ignore\r\n      value: UserInfo.addressResidence,\r\n    });\r\n    col2.push({\r\n      //@ts-ignore\r\n      label: \"Giới tính\",\r\n      //@ts-ignore\r\n      value: UserInfo.gender,\r\n    });\r\n    col2.push({\r\n      //@ts-ignore\r\n      label: \"Ngày cấp\",\r\n      //@ts-ignore\r\n      value: UserInfo.identCardIssueDate,\r\n    });\r\n    col2.push({\r\n      //@ts-ignore\r\n      label: \"Có giá trị đến\",\r\n      //@ts-ignore\r\n      value: UserInfo.expireDate,\r\n    });\r\n    col2.push({\r\n      //@ts-ignore\r\n      label: \"Dân tộc/Quốc tịch\",\r\n      //@ts-ignore\r\n      value: UserInfo.nation_ethnic,\r\n    });\r\n  };\r\n\r\n  // ---------------- load Image ----------------------------\r\n  const loadImg = () => {\r\n    if (frontFile != null && backFile != null) {\r\n      console.log(\"Render Image\");\r\n\r\n      var front_image = document.getElementById(\"finish-front-image\");\r\n      var back_image = document.getElementById(\"finish-back-image\");\r\n      //@ts-ignore\r\n      front_image.src = URL.createObjectURL(frontFile);\r\n      //@ts-ignore\r\n      back_image.src = URL.createObjectURL(backFile);\r\n    }\r\n  };\r\n\r\n  // ------------------ Live Ness-------------------------\r\n  const LiveNess = async () => {\r\n    setLoadingLiveNess(true);\r\n    var formData = new FormData();\r\n\r\n    //@ts-ignore\r\n    const file = location.state.file;\r\n\r\n    formData.append(\r\n      \"CaptureVideo\",\r\n      file,\r\n      `CaptureVideo_${new Date().getTime()}.mp4`\r\n    );\r\n\r\n    formData.append(\"GuidID\", guiId);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${token || \"\"}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(URL_FACE_VIDEO, formData, config).then((response) => {\r\n      console.log(\"RESPONSE : \", response);\r\n      const data = response.data.data;\r\n      const status = response.status;\r\n      if (status == 200) {\r\n        console.log(\"====================================\");\r\n        console.log(\"DATA: \", data);\r\n        console.log(\"====================================\");\r\n        const img = data.displayImage.slice(2, data.displayImage.length - 1);\r\n        setFaceImg(img);\r\n        setCompare(data.matchingResult);\r\n\r\n        setLoadingLiveNess(false);\r\n      } else {\r\n        alert(\"ERROR :\" + response.statusText);\r\n        setLoadingLiveNess(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const title = () => {\r\n    if (loadingLiveNess) {\r\n      return (\r\n        <span className=\"compare_title\">\r\n          Đang thực hiện so sánh khuôn mặt ...\r\n        </span>\r\n      );\r\n    } else if (!loadingLiveNess && compare) {\r\n      return (\r\n        <span className=\"compare_title_true\">\r\n          Khuôn mặt trùng khớp với giấy tờ\r\n        </span>\r\n      );\r\n    } else {\r\n      return (\r\n        <span className=\"compare_title_false\">\r\n          Khuôn mặt không trùng khớp với giấy tờ\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  // ------------------ render btn -----------------------\r\n\r\n  const renderBtn = () => {\r\n    if (compare) {\r\n      return (\r\n        <button className=\"finish-screen-btn\" onClick={onComplete}>\r\n          hoàn tất đăng ký\r\n        </button>\r\n      );\r\n    } else {\r\n      <button className=\"finish-screen-btn\" onClick={onComplete}>\r\n        chụp lại khuôn mặt\r\n      </button>;\r\n    }\r\n  };\r\n\r\n  // ------------------ complete --------------------------\r\n\r\n  const onComplete = () => {\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  // console.log('State: ',this.state);\r\n\r\n  return (\r\n    <div className=\"finish-screen-container\">\r\n      <div className=\"finish-screen-container-header\">\r\n        <img src={\"data:image/jpeg;base64,\" + faceImg} className=\"user-image\" />\r\n        {title()}\r\n      </div>\r\n      <div className=\"finish-screen-btn-container\">\r\n        {renderBtn()}\r\n      </div>\r\n      <div\r\n        className=\"finish-screen-container-footer\"\r\n        style={{ height: height - 250 }}\r\n      >\r\n        <div className=\"list-item\">{renderLeftCol()}</div>\r\n        <div className=\"list-item\">{renderRightCol()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// resize screen\r\nfunction useWindowSize() {\r\n  const [size, setSize] = React.useState([0, 0]);\r\n  React.useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nexport default FinishScreen;\r\n","E:\\ReactJS\\demo-webcam\\src\\features\\finish\\components\\card-info-item.tsx",[],["82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":27,"column":25,"nodeType":"90","messageId":"91","endLine":27,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":27,"column":49,"nodeType":"90","messageId":"91","endLine":27,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":68,"column":7,"nodeType":"94","endLine":68,"endColumn":53},{"ruleId":"95","severity":1,"message":"96","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":18},{"ruleId":"95","severity":1,"message":"99","line":10,"column":10,"nodeType":"97","messageId":"98","endLine":10,"endColumn":22},{"ruleId":"95","severity":1,"message":"100","line":10,"column":24,"nodeType":"97","messageId":"98","endLine":10,"endColumn":39},{"ruleId":"95","severity":1,"message":"101","line":13,"column":10,"nodeType":"97","messageId":"98","endLine":13,"endColumn":14},{"ruleId":"95","severity":1,"message":"102","line":13,"column":16,"nodeType":"97","messageId":"98","endLine":13,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":20,"column":14,"nodeType":"90","messageId":"91","endLine":20,"endColumn":16},{"ruleId":"95","severity":1,"message":"103","line":70,"column":17,"nodeType":"97","messageId":"98","endLine":70,"endColumn":21},{"ruleId":"88","severity":1,"message":"104","line":92,"column":33,"nodeType":"90","messageId":"91","endLine":92,"endColumn":35},{"ruleId":"88","severity":1,"message":"104","line":93,"column":32,"nodeType":"90","messageId":"91","endLine":93,"endColumn":34},{"ruleId":"88","severity":1,"message":"89","line":172,"column":14,"nodeType":"90","messageId":"91","endLine":172,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":185,"column":11,"nodeType":"94","endLine":190,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":200,"column":11,"nodeType":"94","endLine":205,"endColumn":13},{"ruleId":"95","severity":1,"message":"96","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":18},{"ruleId":"95","severity":1,"message":"107","line":12,"column":10,"nodeType":"97","messageId":"98","endLine":12,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":39,"column":6,"nodeType":"110","endLine":39,"endColumn":49,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":57,"column":6,"nodeType":"110","endLine":57,"endColumn":49,"suggestions":"113"},{"ruleId":"95","severity":1,"message":"114","line":61,"column":9,"nodeType":"97","messageId":"98","endLine":61,"endColumn":23},{"ruleId":"108","severity":1,"message":"115","line":113,"column":6,"nodeType":"110","endLine":113,"endColumn":22,"suggestions":"116"},{"ruleId":"95","severity":1,"message":"117","line":152,"column":9,"nodeType":"97","messageId":"98","endLine":152,"endColumn":18},{"ruleId":"95","severity":1,"message":"118","line":171,"column":9,"nodeType":"97","messageId":"98","endLine":171,"endColumn":19},{"ruleId":"95","severity":1,"message":"119","line":8,"column":11,"nodeType":"97","messageId":"98","endLine":8,"endColumn":15},{"ruleId":"95","severity":1,"message":"120","line":14,"column":10,"nodeType":"97","messageId":"98","endLine":14,"endColumn":15},{"ruleId":"95","severity":1,"message":"121","line":15,"column":16,"nodeType":"97","messageId":"98","endLine":15,"endColumn":23},{"ruleId":"95","severity":1,"message":"122","line":16,"column":16,"nodeType":"97","messageId":"98","endLine":16,"endColumn":23},{"ruleId":"95","severity":1,"message":"123","line":18,"column":10,"nodeType":"97","messageId":"98","endLine":18,"endColumn":22},{"ruleId":"95","severity":1,"message":"124","line":18,"column":24,"nodeType":"97","messageId":"98","endLine":18,"endColumn":39},{"ruleId":"108","severity":1,"message":"125","line":35,"column":6,"nodeType":"110","endLine":35,"endColumn":8,"suggestions":"126"},{"ruleId":"88","severity":1,"message":"89","line":194,"column":18,"nodeType":"90","messageId":"91","endLine":194,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":259,"column":9,"nodeType":"94","endLine":259,"endColumn":81},{"ruleId":"84","replacedBy":"127"},{"ruleId":"86","replacedBy":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'userInfo' is defined but never used.","Identifier","unusedVar","'IdentityCard' is assigned a value but never used.","'setIdentityCard' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'code' is assigned a value but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'loadingVerifyFace' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'handleDataAvailable'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook React.useCallback has an unnecessary dependency: 'webcamRef'. Either exclude it or remove the dependency array.",["132"],"'handleDownload' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'guiId', 'history', 'location.state.backFile', 'location.state.frontFile', and 'location.state.userinfo'. Either include them or remove the dependency array.",["133"],"'playVideo' is assigned a value but never used.","'verifyFace' is assigned a value but never used.","'info' is defined but never used.","'width' is assigned a value but never used.","'setCol1' is assigned a value but never used.","'setCol2' is assigned a value but never used.","'liveNessDone' is assigned a value but never used.","'setLineNessDone' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'LiveNess' and 'getdata'. Either include them or remove the dependency array.",["134"],["129"],["130"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [mediaRecorderRef, webcamRef, handleDataAvailable]",{"range":"143","text":"144"},"Update the dependencies array to be: [mediaRecorderRef, setRecording]",{"range":"145","text":"146"},"Update the dependencies array to be: [guiId, history, location.state.backFile, location.state.frontFile, location.state.userinfo, recordedChunks]",{"range":"147","text":"148"},"Update the dependencies array to be: [LiveNess, getdata]",{"range":"149","text":"150"},[1363,1406],"[mediaRecorderRef, webcamRef, handleDataAvailable]",[1907,1950],"[mediaRecorderRef, setRecording]",[3725,3741],"[guiId, history, location.state.backFile, location.state.frontFile, location.state.userinfo, recordedChunks]",[1162,1164],"[LiveNess, getdata]"]